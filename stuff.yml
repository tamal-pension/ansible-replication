---
- name: AWS role
  ansible.builtin.import_role:
    name: inqwise.common.aws
  vars:
    dns_record_list:
    - name: "{{ private_dns }}.{{ private_domain }}"
      zone: "{{ private_domain }}"
      type: A
      value: "{{ private_ip }}"
      private: true
      ttl: 60
    tags_facts:
      private_dns: "private_dns"
      reload_index_recipients: "reload_index_recipients"

- name: Java role
  ansible.builtin.include_role:
    name: inqwise.common.java
  tags: installation

- name: Pension role 
  ansible.builtin.import_role:
    name: pension

- name: Install Alloy
  ansible.builtin.include_role:
    name: alloy
  tags: always
  vars:
    alloy_user_groups:
      - systemd-journal
      - "{{ app_group }}"
    config: |
      loki.write "local" {
        endpoint {
          url = "{{ loki_base_url }}/loki/api/v1/push"
        }
      }

      loki.relabel "journal" {
        forward_to = []

        rule {
          source_labels = ["__journal__systemd_unit"]
          regex         = "(pension-replication.service|telegraf.service)"
          action        = "keep"
        }
        rule {
          source_labels = ["__journal__systemd_unit"]
          target_label  = "unit"
        }
        rule {
          source_labels = ["__journal__hostname"]
          target_label  = "instance"
        }
      }

      loki.source.journal "read" {
        forward_to = [
          loki.write.local.receiver,
        ]
        relabel_rules = loki.relabel.journal.rules
        labels = {
          "job" = "integrations/node_exporter",
          "app" = "pension-replication",
        }
      }
   
      local.file_match "local_files" {
        path_targets = [{"__path__" = "/data/pension/logs/*.log"}]
        sync_period = "10s"
      }

      loki.source.file "log_scrape" {
        targets    = local.file_match.local_files.targets
        forward_to = [loki.process.filter_logs.receiver]
        tail_from_end = true
      }
      loki.process "filter_logs" {
        stage.regex {
          expression = "^(?P<timestamp>[0-9\\-]{10} [0-9:]{8},[0-9]{3}) (?P<level>[^ ]+) (?P<logger>[^ ]+) \\[(?P<thread>[^\\]]+)\\] (?P<message>.*)$"
        }
        stage.labels {
          values = {
            "level" = "level",
            "logger" = "logger",
          }
        }
        stage.static_labels {
          values = {
            "job" = "integrations/node_exporter",
            "app" = "{{ app_name }}",
            "unit"= "{{ app_name }}.service"
          }
        }
        forward_to = [
          loki.write.local.receiver,
        ]
      }