status = error
name = LogstashPropertiesConfig

# Console Appender (Plain)
appender.console.type = Console
appender.console.name = plain_console
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%d{ISO8601}][%-5p][%-25c]%notEmpty{[%X{pipeline.id}]}%notEmpty{[%X{plugin.id}]} %m%n
# Add ThresholdFilter
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = WARN

# Rolling File Appender (Plain)
appender.rolling.type = RollingFile
appender.rolling.name = plain_rolling
appender.rolling.fileName = ${sys:ls.logs}/logstash-plain.log
appender.rolling.filePattern = ${sys:ls.logs}/logstash-plain-%d{yyyy-MM-dd}-%i.log.gz
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size = 10MB
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = [%d{ISO8601}][%-5p][%-25c]%notEmpty{[%X{pipeline.id}]}%notEmpty{[%X{plugin.id}]} %m%n
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 5
appender.rolling.avoid_pipelined_filter.type = PipelineRoutingFilter
# Add ThresholdFilter
appender.rolling.filter.threshold.type = ThresholdFilter
appender.rolling.filter.threshold.level = WARN

# Pipeline Routing Appender
appender.routing.type = PipelineRouting
appender.routing.name = pipeline_routing_appender
appender.routing.pipeline.type = RollingFile
appender.routing.pipeline.name = appender-${ctx:pipeline.id}
appender.routing.pipeline.fileName = ${sys:ls.logs}/pipeline_${ctx:pipeline.id}.log
appender.routing.pipeline.filePattern = ${sys:ls.logs}/pipeline_${ctx:pipeline.id}.%i.log.gz
appender.routing.pipeline.layout.type = PatternLayout
appender.routing.pipeline.layout.pattern = [%d{ISO8601}][%-5p][%-25c] %m%n
appender.routing.pipeline.policies.type = Policies
appender.routing.pipeline.policies.size.type = SizeBasedTriggeringPolicy
appender.routing.pipeline.policies.size.size = 10MB
appender.routing.pipeline.strategy.type = DefaultRolloverStrategy
appender.routing.pipeline.strategy.max = 5
# Add ThresholdFilter
appender.routing.pipeline.filter.threshold.type = ThresholdFilter
appender.routing.pipeline.filter.threshold.level = WARN

# Root Logger Configuration
rootLogger.level = WARN
rootLogger.appenderRef.console.ref = plain_console
rootLogger.appenderRef.rolling.ref = plain_rolling
rootLogger.appenderRef.routing.ref = pipeline_routing_appender

# Deprecation Rolling File Appender
appender.deprecation_rolling.type = RollingFile
appender.deprecation_rolling.name = deprecation_plain_rolling
appender.deprecation_rolling.fileName = ${sys:ls.logs}/logstash-deprecation.log
appender.deprecation_rolling.filePattern = ${sys:ls.logs}/logstash-deprecation-%d{yyyy-MM-dd}-%i.log.gz
appender.deprecation_rolling.policies.type = Policies
appender.deprecation_rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.deprecation_rolling.policies.time.interval = 1
appender.deprecation_rolling.policies.time.modulate = true
appender.deprecation_rolling.layout.type = PatternLayout
appender.deprecation_rolling.layout.pattern = [%d{ISO8601}][%-5p][%-25c]%notEmpty{[%X{pipeline.id}]}%notEmpty{[%X{plugin.id}]} %m%n
appender.deprecation_rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.deprecation_rolling.policies.size.size = 10MB
appender.deprecation_rolling.strategy.type = DefaultRolloverStrategy
appender.deprecation_rolling.strategy.max = 5
# Add ThresholdFilter
appender.deprecation_rolling.filter.threshold.type = ThresholdFilter
appender.deprecation_rolling.filter.threshold.level = WARN

# Deprecation Logger
logger.deprecation.name = org.logstash.deprecation
logger.deprecation.level = ERROR
logger.deprecation.appenderRef.deprecation_rolling.ref = deprecation_plain_rolling
logger.deprecation.additivity = false

# License Reader Logger
logger.licensereader.name = logstash.licensechecker.licensereader
logger.licensereader.level = ERROR

# Silence Apache HTTP Client by Default
logger.apache_http_client.name = org.apache.http
logger.apache_http_client.level = FATAL